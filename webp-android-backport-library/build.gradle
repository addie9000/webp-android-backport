buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.6.+'
    }
}
apply plugin: 'android-library'

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.0"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 18
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }

}

task ndkBuild(type: Exec) {
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'ndk-build'
    } else {
        commandLine 'ndk-build'
    }
}

task ndkClean(type: Exec) {
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'ndk-build clean'
    } else {
        commandLine 'ndk-build'
    }
}

task packageNativeLibsJar(type: Zip, description: 'Create a jar with native libraries.') {
    destinationDir file("$buildDir/libs")
    baseName 'native-libs'
    extension 'jar'
    into('lib/') {
        from fileTree(dir: 'libs', include: '**/*.so')
    }
}
packageNativeLibsJar.dependsOn ndkBuild

clean.dependsOn ndkClean

tasks.whenTaskAdded { task ->
    if (task.name == 'bundleRelease') {
        task.finalizedBy packageNativeLibsJar
    }
}

// Try to put *.so to aar but failed...
//task addNativeLibsJarToAar(type: Zip, description: 'Add the native libs jar to aar.') {
//    copy {
//        from "${buildDir}/libs/${baseName}.aar"
//        into "${buildDir}/libs"
//        rename { String fileName ->
//            fileName.replace('aar', 'orig')
//        }
//    }
//
//    destinationDir file("$buildDir/libs")
//    extension 'aar'
//    from zipTree("${buildDir}/libs/${baseName}.orig")
//    into('libs') {
//        from files("${buildDir}/libs/native-libs.jar")
//    }
//}
//
//addNativeLibsJarToAar.dependsOn packageNativeLibsJar

//tasks.withType(Zip) {
//    packageLibrary -> packageLibrary.dependsOn packageNativeLibsJar
//}
